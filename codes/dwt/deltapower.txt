

files=dir('*.mat');
length(files);
for i=1:length(files)
A=importdata(files(i).name);
data=A';
POWER_DELTA=[];
waveletFunction = 'db8';
for ii=1:32
    s=data(:, ii);
     [C,L] = wavedec(S,8,waveletFunction);
                %%Calculation The Coificients Vectors
                cD1 = detcoef(C,L,1);                   %NOISY
                cD2 = detcoef(C,L,2);                   %NOISY
                cD3 = detcoef(C,L,3);                   %NOISY
                cD4 = detcoef(C,L,4);                   %NOISY
                cD5 = detcoef(C,L,5);                   %GAMA
                cD6 = detcoef(C,L,6);                   %BETA
                cD7 = detcoef(C,L,7);                   %ALPHA
                cD8 = detcoef(C,L,8);                   %THETA
                cA8 = appcoef(C,L,waveletFunction,8);   %DELTA
                %%%%Calculation the Details Vectors
                D1 = wrcoef('d',C,L,waveletFunction,1); %NOISY
                D2 = wrcoef('d',C,L,waveletFunction,2); %NOISY
                D3 = wrcoef('d',C,L,waveletFunction,3); %NOISY
                D4 = wrcoef('d',C,L,waveletFunction,4); %NOISY
                D5 = wrcoef('d',C,L,waveletFunction,5); %GAMMA
                D6 = wrcoef('d',C,L,waveletFunction,6); %BETA
                D7 = wrcoef('d',C,L,waveletFunction,7); %ALPHA
                D8 = wrcoef('d',C,L,waveletFunction,8); %THETA
                A8 = wrcoef('a',C,L,waveletFunction,8); %DELTA
                POWER_DELTA(ii) = (sum(A8.^2))/length(A8);
end
 stdData(i,:)= POWER_DELTA;
end